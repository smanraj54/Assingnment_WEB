{"ast":null,"code":"var _jsxFileName = \"/Users/manrajsingh/Documents/Dal_Web_Lab/Lab2/tutorial3/src/Pages/SecondPage.js\",\n    _s = $RefreshSig$();\n\nimport { Form, Button, Container, Alert, Breadcrumb, Card, BreadcrumbItem } from 'react-bootstrap'; // import reactDom from 'react-dom';\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar nameValidationPattern = new RegExp('^[a-zA-Z0-9]*$');\nvar passwordValidationPattern = new RegExp('^[a-zA-Z0-9$@_]*$');\nvar emailValidationPattern = new RegExp('^[\\\\w-\\\\.]+@([\\\\w-]+\\\\.)+[\\\\w-]{2,4}$');\n\nfunction SecondPage() {\n  _s();\n\n  const [emailValidation, setEmailValidation] = useState(false);\n  const [firstNameValidation, setFirstNameValidation] = useState(false);\n  const [lastNameValidation, setLastNameValidation] = useState(false);\n  const [passwordValidation, setPasswordValidation] = useState(false);\n  const [confirmPasswordValidation, setConfirmPasswordValidation] = useState(false);\n  const [completeValidation, setCompleteValidation] = useState(false);\n  const [passwordValue, setPasswordValue] = useState('');\n  const [confirmPasswordValue, setConfirmPasswordValue] = useState('');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        validated: completeValidation,\n        onSubmit: handleCompleteValidation,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formFirstName\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"FirstName\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            isInvalid: firstNameValidation,\n            onChange: handleFirstNameValidation,\n            type: \"text\",\n            placeholder: \"FirstName\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            type: \"invalid\",\n            children: \"UsesrName should be an alfhanumeric value!!! \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formEmail\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"EmailAddress\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            isInvalid: emailValidation,\n            onChange: handleEmailValidation,\n            type: \"text\",\n            placeholder: \"UserName\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            type: \"invalid\",\n            children: \"Enter Correct Email format !!!!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formPassword\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: \"Enter Unique Password!!!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n            children: \"Enter the Alert Text here !!!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formConfirmPassword\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n            children: \"Enter the Alert Text here !!!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SecondPage, \"HqwQaaRwvdv/5+m2T7fapOHGbsY=\");\n\n_c = SecondPage;\nexport default SecondPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SecondPage\");","map":{"version":3,"sources":["/Users/manrajsingh/Documents/Dal_Web_Lab/Lab2/tutorial3/src/Pages/SecondPage.js"],"names":["Form","Button","Container","Alert","Breadcrumb","Card","BreadcrumbItem","React","useState","nameValidationPattern","RegExp","passwordValidationPattern","emailValidationPattern","SecondPage","emailValidation","setEmailValidation","firstNameValidation","setFirstNameValidation","lastNameValidation","setLastNameValidation","passwordValidation","setPasswordValidation","confirmPasswordValidation","setConfirmPasswordValidation","completeValidation","setCompleteValidation","passwordValue","setPasswordValue","confirmPasswordValue","setConfirmPasswordValue","handleCompleteValidation","handleFirstNameValidation","handleEmailValidation"],"mappings":"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","sourcesContent":["import { Form, Button, Container, Alert, Breadcrumb, Card, BreadcrumbItem } from 'react-bootstrap';\n// import reactDom from 'react-dom';\nimport React, {useState} from 'react';\n\nvar nameValidationPattern = new RegExp('^[a-zA-Z0-9]*$');\nvar passwordValidationPattern = new RegExp('^[a-zA-Z0-9$@_]*$');\nvar emailValidationPattern = new RegExp('^[\\\\w-\\\\.]+@([\\\\w-]+\\\\.)+[\\\\w-]{2,4}$');\n\nfunction SecondPage(){\n    \n    const [emailValidation, setEmailValidation] = useState(false);\n    const [firstNameValidation, setFirstNameValidation] = useState(false);\n    const [lastNameValidation, setLastNameValidation] = useState(false);\n    const [passwordValidation, setPasswordValidation] = useState(false);\n    const [confirmPasswordValidation, setConfirmPasswordValidation] = useState(false);\n    const [completeValidation, setCompleteValidation] = useState(false);\n    const [passwordValue, setPasswordValue] = useState('');\n    const [confirmPasswordValue, setConfirmPasswordValue] = useState('');\n    \n\n    \n    return (\n        <div>\n            <Container fluid>\n            <Form validated={completeValidation} onSubmit={handleCompleteValidation}>\n                <Form.Group controlId = \"formFirstName\">\n                    <Form.Label>\n                        FirstName\n                    </Form.Label>\n                    <Form.Control required isInvalid = {firstNameValidation} onChange = {handleFirstNameValidation} type=\"text\" placeholder=\"FirstName\"/>\n                    <Form.Control.Feedback type='invalid'>UsesrName should be an alfhanumeric value!!! </Form.Control.Feedback>\n                </Form.Group>\n                <Form.Group controlId = \"formEmail\">\n                    <Form.Label>\n                        EmailAddress\n                    </Form.Label>\n                    <Form.Control required isInvalid = {emailValidation} onChange = {handleEmailValidation} type=\"text\" placeholder=\"UserName\"/>\n                    <Form.Control.Feedback type='invalid'>Enter Correct Email format !!!!</Form.Control.Feedback>\n                </Form.Group>\n                <Form.Group controlId = \"formPassword\">\n                    <Form.Label>\n                        Password\n                    </Form.Label>\n                    <Form.Control type=\"password\" placeholder=\"Enter Unique Password!!!\"/>\n                    <Form.Text>Enter the Alert Text here !!!</Form.Text>\n                </Form.Group>\n                <Form.Group controlId = \"formConfirmPassword\">\n                    <Form.Label>\n                        Confirm Password\n                    </Form.Label>\n                    <Form.Control type=\"password\" placeholder=\"Confirm Password\"/>\n                    <Form.Text>Enter the Alert Text here !!!</Form.Text>\n                </Form.Group>\n            </Form>\n            <Button>\n                Submit\n            </Button>\n            </Container>\n        </div>\n\n    );\n}\nexport default SecondPage;"]},"metadata":{},"sourceType":"module"}